msgid ""
msgstr ""
"Project-Id-Version: BeeWare 0.3\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-05-29 10:14+0800\n"
"PO-Revision-Date: 2025-08-19 20:02+0000\n"
"Last-Translator: \"Mirko P.\" <michoo@outlook.de>\n"
"Language-Team: German <https://hosted.weblate.org/projects/beeware/tutorial/"
"topics/testing/de/>\n"
"Language: de\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=2; plural=n != 1;\n"
"X-Generator: Weblate 5.13\n"
"Generated-By: Babel 2.15.0\n"

#: ../../tutorial/topics/testing.rst:3 93773728f8c54ddb87420111aeed2ad4
msgid "Testing times"
msgstr "Prüfzeiten"

#: ../../tutorial/topics/testing.rst:5 f78267d23da54a2ab3d6150efa58d899
msgid "Most software development doesn't involve writing new code - it's modifying existing code. Ensuring that existing code continues to work in the way we expect is a key part of the software development process. One way to do ensure the behavior of our app is with a *test suite*."
msgstr ""
"Bei der Softwareentwicklung geht es meistens nicht darum, neuen Code zu "
"schreiben, sondern bestehenden Code zu ändern. Es ist ein wichtiger Teil des "
"Softwareentwicklungsprozesses, sicherzustellen, dass der bestehende Code "
"weiterhin so funktioniert, wie wir es erwarten. Eine Möglichkeit, das "
"Verhalten unserer App sicherzustellen, ist eine *Testsuite*."

#: ../../tutorial/topics/testing.rst:11 8170b274930d4849aa64dc40421d0549
msgid "Running the test suite"
msgstr "Testlauf durchführen"

#: ../../tutorial/topics/testing.rst:13 e55d23b4fa494b09a62a3c55ee0d0ebb
msgid "It turns out the project from the core tutorial already has a test suite! When we originally generated our project, two top-level directories were generated: ``src`` and ``tests``. The ``src`` folder contains the code for our app; the ``tests`` folder contains our test suite. Inside the ``tests`` folder is a file named ``test_app.py`` with the following content::"
msgstr ""
"Es stellt sich heraus, dass das Projekt aus dem Kern-Tutorial bereits über "
"eine Testsuite verfügt! Als wir unser Projekt ursprünglich erstellt haben, "
"wurden zwei Verzeichnisse auf oberster Ebene generiert: „src“ und „tests“. "
"Der Ordner „src“ enthält den Code für unsere App, der Ordner „tests“ enthält "
"unsere Testsuite. Im Ordner „tests“ befindet sich eine Datei namens "
"„test_app.py“ mit folgendem Inhalt::"

#: ../../tutorial/topics/testing.rst:23 12578aff26fb4372963fa5ccd8005e18
msgid "This is a `Pytest <https://pytest.org>`__ *test case* - a block of code that can be executed to verify some behavior of your app. In this case, the test is a placeholder, and doesn't test anything about our app - but it is a test that we can perform."
msgstr ""
"Dies ist ein `Pytest <https://pytest.org>`__ *Testfall* – ein Code-Block, "
"der ausgeführt werden kann, um bestimmte Verhaltensweisen Ihrer App zu "
"überprüfen. In diesem Fall ist der Test ein Platzhalter und testet nichts an "
"unserer App – aber es ist ein Test, den wir durchführen können."

#: ../../tutorial/topics/testing.rst:28 a8e6e625f47e4c0f8f476892ce705854
msgid "We can run this test suite using the ``--test`` option to ``briefcase dev``. As this is the first time we are running tests, we also need to pass in the ``-r`` option to ensure that the test requirements are also installed:"
msgstr ""
"Wir können diese Testsuite mit der Option ``--test`` für ``briefcase dev`` "
"ausführen. Da dies das erste Mal ist, dass wir Tests ausführen, müssen wir "
"auch die Option ``-r`` übergeben, um sicherzustellen, dass die "
"Testanforderungen auch installiert werden:"

#: ../../tutorial/topics/testing.rst:34 ../../tutorial/topics/testing.rst:139
#: ../../tutorial/topics/testing.rst:209 ../../tutorial/topics/testing.rst:326
#: ../../tutorial/topics/testing.rst:396 0910657b706845c3ace7e6647605a676
#: 44922990ed9145e9851f611612bb4958 6b8ed72bdb45403c8514d0b0fb1c707c
#: 75cda337703e4d9e82200b55a7dc93e6 f285a2fb7b4243cab92c587103782fea
msgid "macOS"
msgstr "macOS"

#: ../../tutorial/topics/testing.rst:57 ../../tutorial/topics/testing.rst:156
#: ../../tutorial/topics/testing.rst:241 ../../tutorial/topics/testing.rst:344
#: ../../tutorial/topics/testing.rst:438 0369e600a7bf45b99e78a947f28092a3
#: 5288d72cc7cf4c27bd9be3b011cdfcc9 612b128c8f5b4b6bba57ff8bc5bd82d9
#: b219829b954a484a94cc43d37bfa964a c6c3252a29314eb5acb19f780e3d5d58
#, fuzzy
msgid "Linux"
msgstr "Linux"

#: ../../tutorial/topics/testing.rst:83 ../../tutorial/topics/testing.rst:173
#: ../../tutorial/topics/testing.rst:275 ../../tutorial/topics/testing.rst:362
#: ../../tutorial/topics/testing.rst:470 1c34b172f19b443294215c1c584e4434
#: 311be1c560b0435d945ebbe300955310 8ad70c8925ce4557b1058f97296142d9
#: c56a5cd5ede14061824827fb2f74a5fd d524054d77ce4a3ba45d09f4f0ea6647
msgid "Windows"
msgstr "Windows"

#: ../../tutorial/topics/testing.rst:109 e61fdd65e77041648fef0e3ec359513c
msgid "Success! We've just executed a single test that verifies Python math works in the way we'd expect (What a relief!)."
msgstr ""
"Erfolgreich! Wir haben soeben einen einzigen Test durchgeführt, der "
"bestätigt, dass die Python-Mathematik so funktioniert, wie wir es erwartet "
"haben (was für eine Erleichterung!)."

#: ../../tutorial/topics/testing.rst:112 bdfb76180b914a03a4b9f51b8b415562
#, fuzzy
msgid "Let's replace this placeholder test with a test to verify that our ``greeting()`` method behaves the way we'd expect. Replace the contents of ``test_app.py`` with the following::"
msgstr "Lassen Sie uns diesen Platzhaltertest durch einen Test ersetzen, der überprüft, ob sich unsere Methode ``Gruß()`` so verhält, wie wir es erwarten. Ersetzen Sie den Inhalt von ``test_app.py`` durch den folgenden::"

#: ../../tutorial/topics/testing.rst:130 8d4c83b186744c548956a63775950dbe
#, fuzzy
msgid "This defines two new tests, verifying the two behaviors we expect to see: the output when a name is provided, and the output when the name is empty."
msgstr "Dies definiert zwei neue Tests, die beiden erwarteten Verhaltensweisen überprüfen: die Ausgabe, wenn ein Name angegeben wird, und die Ausgabe, wenn der Name leer ist."

#: ../../tutorial/topics/testing.rst:133 94079c4ca18a4ccb92c8421eadd1127e
#, fuzzy
msgid "We can now re-run the test suite. This time, we don't need to provided the ``-r`` option, as the test requirements have already been installed; we only need to use the ``--test`` option:"
msgstr "Wir können nun die Testsuite erneut ausführen. Diesmal brauchen wir die Option ``-r`` nicht, da die Testanforderungen bereits installiert wurden; wir müssen nur die Option ``--test`` verwenden:"

#: ../../tutorial/topics/testing.rst:190 66047769b0fd4eb79fc58304776210e3
#, fuzzy
msgid "Excellent! Our ``greeting()`` utility method is working as expected."
msgstr "Ausgezeichnet! Unsere Utility-Methode ``Gruß()`` funktioniert wie erwartet."

#: ../../tutorial/topics/testing.rst:193 4bf668f3028a4019ab4eb59af44fc5b2
#, fuzzy
msgid "Test driven development"
msgstr "Testgetriebene Entwicklung"

#: ../../tutorial/topics/testing.rst:195 f8743019f36042a6af9a0a74d87eb700
#, fuzzy
msgid "Now that we have a test suite, we can use it to drive the development of new features. Let's modify our app to have a special greeting for one particular user. We can start by adding a test case for the new behavior that we'd like to see to the bottom of ``test_app.py``::"
msgstr "Jetzt, da wir eine Test-Suite haben, können wir sie nutzen, um die Entwicklung neuer Funktionen voranzutreiben. Ändern wir unsere Anwendung, um eine spezielle Begrüßung für einen bestimmten Benutzer zu erhalten. Wir können damit beginnen, indem wir einen Testfall für das neue Verhalten, das wir gerne sehen möchten, am Ende von ``test_app.py`` hinzufügen::"

#: ../../tutorial/topics/testing.rst:205 7bda7f335bfa42dfada3354efe73ada4
#, fuzzy
msgid "Then, run the test suite with this new test:"
msgstr "Führen Sie dann die Testsuite mit diesem neuen Test aus:"

#: ../../tutorial/topics/testing.rst:307 4c7f397a6b4342e8a1ddee9b9e830615
#, fuzzy
msgid "This time, we see a test failure - and the output explains the source of the failure: the test is expecting the output \"BeeWare the IDEs of Python!\", but our implementation of ``greeting()`` is returning \"Hello, Brutus\". Let's modify the implementation of ``greeting()`` in ``src/helloworld/app.py`` to have the new behavior::"
msgstr "Dieses Mal sehen wir einen Testfehler - und die Ausgabe erklärt die Quelle des Fehlers: der Test erwartet die Ausgabe \"BeeWare the IDEs of Python!\", aber unsere Implementierung von ``Gruß()`` gibt \"Hallo, Brutus\" zurück. Ändern wir die Implementierung von ``Gruß()`` in ``src/helloworld/app.py``, um das neue Verhalten zu erhalten::"

#: ../../tutorial/topics/testing.rst:322 7793c86300ea44a4b32e745c7cc6bb66
#, fuzzy
msgid "If we run the tests again, we'll now see our tests pass:"
msgstr "Wenn wir die Tests noch einmal durchführen, sehen wir, dass die Tests bestanden wurden:"

#: ../../tutorial/topics/testing.rst:381 aab0eac82ade4932b40254dbe775911b
#, fuzzy
msgid "Runtime tests"
msgstr "Laufzeittests"

#: ../../tutorial/topics/testing.rst:383 ef1dc860f1be44df97a20179ea3844e7
msgid "So far, we've been running the tests in development mode. This is especially useful when you're developing new features, as you can rapidly iterate on adding tests, and adding code to make those tests pass. However, at some point, you'll want to verify that your code also runs correctly when inside the bundle app environment."
msgstr "Bislang haben wir die Tests im Entwicklungsmodus ausgeführt. Dies ist besonders nützlich, wenn Sie neue Funktionen entwickeln, da Sie schnell Tests und Code hinzufügen können, damit diese Tests erfolgreich sind. Irgendwann werden Sie jedoch sicherstellen wollen, dass Ihr Code auch als Anwendungspaket korrekt ausgeführt wird."

#: ../../tutorial/topics/testing.rst:389 19507bc8ccbe47debc44a70d39982e81
#, fuzzy
msgid "The ``--test`` and ``-r`` options can also be passed to the ``run`` command. If you use ``briefcase run --test -r``, the same test suite will run, but it will run inside the packaged application bundle rather than your development environment:"
msgstr "Die Optionen ``--test`` und ``-r`` können auch an den Befehl ``run`` übergeben werden. Wenn Sie ``briefcase run --test -r`` verwenden, wird die gleiche Testsuite ausgeführt, allerdings innerhalb des Anwendungspakets und nicht in Ihrer Entwicklungsumgebung:"

#: ../../tutorial/topics/testing.rst:507 eb9f04a25a2b444e9d687d04e9ad2982
#, fuzzy
msgid "As with ``briefcase dev --test``, the ``-r`` option is only needed the first time you run the test suite to ensure that the test dependencies are present. On subsequent runs, you can omit this option."
msgstr "Wie bei ``briefcase dev --test`` wird die Option ``-r`` nur bei der ersten Ausführung der Testsuite benötigt, um sicherzustellen, dass die Testabhängigkeiten vorhanden sind. Bei späteren Durchläufen können Sie diese Option weglassen."

#: ../../tutorial/topics/testing.rst:511 3bd3cefc847441d7b56ff08b6888e60c
#, fuzzy
msgid "You can also use the ``--test`` option on mobile backends: - so ``briefcase run iOS --test`` and ``briefcase run android --test`` will both work, running the test suite on the mobile device you select."
msgstr "Sie können auch die Option ``--test`` auf mobilen Backends verwenden: - so funktionieren ``briefcase run iOS --test`` und ``briefcase run android --test``, die Testsuite auf dem von Ihnen ausgewählten mobilen Gerät ausführen."

#~ msgid "Next steps"
#~ msgstr "Nächste Schritte"
