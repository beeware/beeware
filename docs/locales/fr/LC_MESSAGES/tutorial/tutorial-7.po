msgid ""
msgstr ""
"Project-Id-Version: BeeWare 0.3\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-06-20 03:05+0000\n"
"PO-Revision-Date: 2025-06-21 02:01+0000\n"
"Last-Translator: John <johnzhou721@gmail.com>\n"
"Language-Team: French <https://hosted.weblate.org/projects/beeware/tutorial/"
"tutorial-7/fr/>\n"
"Language: fr\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=2; plural=n > 1;\n"
"X-Generator: Weblate 5.13-dev\n"
"Generated-By: Babel 2.17.0\n"

#: ../../tutorial/tutorial-7.rst:3 c0efd6e2223c47118ab7f50bc1ebe1f9
#, fuzzy
msgid "Tutorial 7 - Get this (third)-party started"
msgstr "Tutoriel n° 7 - Démarrer cette (troisième) partie"

#: ../../tutorial/tutorial-7.rst:5 472fa4561e1440c8b8943696f9a54f53
#, fuzzy
msgid "So far, the app we've built has only used our own code, plus the code provided by BeeWare. However, in a real-world app, you'll likely want to use a third-party library, downloaded from the Python Package Index (PyPI)."
msgstr "Jusqu'à présent, l'application que nous avons construite n'a utilisé que notre propre code, ainsi que le code fourni par BeeWare. Cependant, dans une application réelle, vous voudrez probablement utiliser une bibliothèque tierce, téléchargée à partir du Python Package Index (PyPI)."

#: ../../tutorial/tutorial-7.rst:9 cead96f6abcd4e80a98319f42fdb0691
#, fuzzy
msgid "Let's modify our app to include a third-party library."
msgstr "Modifions notre application pour y inclure une bibliothèque tierce."

#: ../../tutorial/tutorial-7.rst:12 09205e98844947a2a37eeb00a34a6610
msgid "Adding a package"
msgstr ""

#: ../../tutorial/tutorial-7.rst:14 dc4188b519dd4e0e90c1e23f690410bd
msgid "Let's modify our application to say a little bit more than just \"Hi, there!\"."
msgstr ""

#: ../../tutorial/tutorial-7.rst:16 6c43b52826de46dc8283b99f1ffd7cb8
msgid "To generate some more interesting text for the dialog, we're going to use a library called `Faker <https://faker.readthedocs.io/en/stable/>`__ . Faker is a Python package that generates fake content, including names and text blocks. The names and words in the text block are generated from an arbitrary list of words provided by Faker. We're going to use Faker to construct a fake message, as if someone is responding to the user."
msgstr ""

#: ../../tutorial/tutorial-7.rst:23 fe30468785e14c48ba8d0fdd9bb9fe8e
#, fuzzy
msgid "We start by adding ``faker`` to our app. Add an import to the top of the ``app.py`` to import ``faker``::"
msgstr "Ajoutons un appel API ``httpx`` à notre application. Ajoutez un import au début de ``app.py`` pour importer ``httpx``: :"

#: ../../tutorial/tutorial-7.rst:28 3ddb8bd6cb7144f39b0121d254a09073
#, fuzzy
msgid "Then modify the ``say_hello()`` callback so it looks like this::"
msgstr "Ensuite, modifiez le callback ``say_hello()`` pour qu'il ressemble à ceci: :"

#: ../../tutorial/tutorial-7.rst:39 2034a7fd1eeb48a8bea715e0983b5523
#, fuzzy
msgid "Let's run our updated app in Briefcase developer mode to check that our change has worked."
msgstr "Exécutons notre application mise à jour dans le mode développeur de Briefcase pour vérifier que notre changement a fonctionné."

#: ../../tutorial/tutorial-7.rst:44 ../../tutorial/tutorial-7.rst:120
#: ../../tutorial/tutorial-7.rst:182 ../../tutorial/tutorial-7.rst:510
#: 7dae5ea8c04e472cb3268fab5a936f3e 8a7e8b7f8b1945679d57343911570db5
#: 8fc1dbc68e8e448492e9144011ea2d8d ebc851d45e334ff8ba808cb9c0203f1a
msgid "macOS"
msgstr "macOS"

#: ../../tutorial/tutorial-7.rst:64 ../../tutorial/tutorial-7.rst:134
#: ../../tutorial/tutorial-7.rst:220 ../../tutorial/tutorial-7.rst:531
#: 3f68199b67fc4f8f9a9931e38d883b98 5b6556276a744bfdb8dc8ab657f4641f
#: 85e90c4cb13c4cb3b6e50700b4f56c5c e7a2ff7dc11e47cda58baacb2241a1d9
msgid "Linux"
msgstr "Linux"

#: ../../tutorial/tutorial-7.rst:84 ../../tutorial/tutorial-7.rst:148
#: ../../tutorial/tutorial-7.rst:273 ../../tutorial/tutorial-7.rst:558
#: 64e3bb28bb78433c86f2807f86f3beca 709caaf512bc46bb8e20ea5f09383472
#: d9a11a39c2ed463bb30d6132e42cd0a9 ed99129dfb184ffe98859c7db4d19da8
msgid "Windows"
msgstr "Windows"

#: ../../tutorial/tutorial-7.rst:104 ../../tutorial/tutorial-7.rst:162
#: ../../tutorial/tutorial-7.rst:311 ../../tutorial/tutorial-7.rst:579
#: 1a0edc00237d4394ae8beaa4df6b486c 46577f537ad1470b85a5f8347a1e680d
#: c2c4c6cf9ff24fd59079a17db893fa0e e5495388c0ac42c783cef2c7af639b7c
msgid "Android"
msgstr ""

#: ../../tutorial/tutorial-7.rst:106 ../../tutorial/tutorial-7.rst:164
#: adcafc4f760a408d99e516abbe277acf f586d2763a7346c09f6070226fe200b7
msgid "You can't run an Android app in developer mode - use the instructions for your chosen desktop platform."
msgstr ""

#: ../../tutorial/tutorial-7.rst:109 ../../tutorial/tutorial-7.rst:167
#: ../../tutorial/tutorial-7.rst:384 ../../tutorial/tutorial-7.rst:596
#: 86dca11fa3404268b0161ab399752350 88b11beb12b544ba9f678a53f352f6fe
#: 9daf6fab255f48808586cb9964214894 ea09748bb9b74e91a5f69cd0875688e7
msgid "iOS"
msgstr "iOS"

#: ../../tutorial/tutorial-7.rst:111 ../../tutorial/tutorial-7.rst:169
#: 07e386caeee240fbbae03ea6d78213a4 1427661dd642454dacea01d69a9b1766
msgid "You can't run an iOS app in developer mode - use the instructions for your chosen desktop platform."
msgstr ""

#: ../../tutorial/tutorial-7.rst:114 f6db1525c17d42f2a7543c60bbfd757f
#, fuzzy
msgid "What happened? We've added ``faker`` to our *code*, but we haven't added it to our development virtual environment. We can fix this by installing ``faker`` with ``pip``, and then re-running ``briefcase dev``:"
msgstr "Qu'est-ce qui s'est passé ? Nous avons ajouté ``httpx`` à notre *code*, mais nous ne l'avons pas ajouté à notre environnement virtuel de développement. Nous pouvons corriger cela en installant ``httpx`` avec ``pip``, puis en relançant ``briefcase dev`` :"

#: ../../tutorial/tutorial-7.rst:127 ../../tutorial/tutorial-7.rst:141
#: ../../tutorial/tutorial-7.rst:155 3ff689a4fa554cbe8132f4985f26d3eb
#: 672a01904be84b3c9e65f81f7fa24234 d0e265865c274199aaa9def468256a39
#, fuzzy
msgid "When you enter a name and press the button, you should see a dialog that looks something like:"
msgstr "Lorsque vous entrez un nom et que vous appuyez sur le bouton, une boîte de dialogue doit s'afficher :"

#: ../../tutorial/tutorial-7.rst:130 99d741deb4664ce1b9d16bb094132529
#, fuzzy
msgid "Hello World Tutorial 7 dialog, on macOS"
msgstr "Tutoriel Hello World 7 dialogue, sur macOS"

#: ../../tutorial/tutorial-7.rst:144 d9a43e3b64df404f9102cc689571065c
#, fuzzy
msgid "Hello World Tutorial 7 dialog, on Linux"
msgstr "Tutoriel Hello World 7 dialogue, sur Linux"

#: ../../tutorial/tutorial-7.rst:158 8d4a4c27bc444b3a8d155d66e1631003
#, fuzzy
msgid "Hello World Tutorial 7 dialog, on Windows"
msgstr "Tutoriel Hello World 7 dialogue, sur Windows"

#: ../../tutorial/tutorial-7.rst:172 ea5dd0fcae9b49959f23bd28fba5b720
#, fuzzy
msgid "We've now got a working app, using a third party library, running in development mode!"
msgstr "Nous avons maintenant une application fonctionnelle, utilisant une bibliothèque tierce, fonctionnant en mode développement !"

#: ../../tutorial/tutorial-7.rst:175 5460877abe6044f4834d6a1110264ffe
#, fuzzy
msgid "Running the updated app"
msgstr "Exécution de l'application mise à jour"

#: ../../tutorial/tutorial-7.rst:177 db706f24f3f14acea55776d300538c14
#, fuzzy
msgid "Let's get this updated application code packaged as a standalone app. Since we've made code changes, we need to follow the same steps as in :doc:`Tutorial 4 <tutorial-4>`:"
msgstr "Nous allons faire en sorte que ce code d'application mis à jour soit empaqueté en tant qu'application autonome. Puisque nous avons modifié le code, nous devons suivre les mêmes étapes que dans :doc:`Tutoriel 4 <tutorial-4>` :"

#: ../../tutorial/tutorial-7.rst:184 ../../tutorial/tutorial-7.rst:222
#: ../../tutorial/tutorial-7.rst:275 ../../tutorial/tutorial-7.rst:313
#: ../../tutorial/tutorial-7.rst:386 7013c509dbf14c398c2e4328a19dabb7
#: 807365f81b9c4a06892171e4fbda97b5 9837d695dac94dc59919bcb49c5098cf
#: a81f5fa8e1854d94be9ccff4dbfdf8dd efe037ca8b17489fb5c2fba4005f6e5c
#, fuzzy
msgid "Update the code in the packaged app:"
msgstr "Mettre à jour le code dans l'application packagée :"

#: ../../tutorial/tutorial-7.rst:195 ../../tutorial/tutorial-7.rst:233
#: ../../tutorial/tutorial-7.rst:286 ../../tutorial/tutorial-7.rst:324
#: ../../tutorial/tutorial-7.rst:397 3e50d2ad7b9343bfa5fe1b9d30e69566
#: 6be112856384466b87e9529fc180812e 9fa1aa54ff9147f69d1395aa54a9ddb6
#: b201647956c04b5ba38095664614fd7f d6b434737e08477eb70d40ae14fc99dd
#, fuzzy
msgid "Rebuild the app:"
msgstr "Reconstruire l'application :"

#: ../../tutorial/tutorial-7.rst:204 ../../tutorial/tutorial-7.rst:247
#: ../../tutorial/tutorial-7.rst:295 0e61f9866bf74dbabe7821a9a8f1be51
#: a0dda02885e64aa7b9e5a8212bca2cc6 d85824e1dbee476688cc9ba4dbd149cc
#, fuzzy
msgid "And finally, run the app:"
msgstr "Enfin, lancez l'application :"

#: ../../tutorial/tutorial-7.rst:213 ../../tutorial/tutorial-7.rst:304
#: a717aa77f2744aed9ab8a6e97e889275 e0076d766e98444f93acc773c3b0e0c6
#, fuzzy
msgid "However, when the app runs, you'll see an error in the console, plus a crash dialog:"
msgstr "Cependant, lorsque l'application s'exécute, vous verrez une erreur dans la console, ainsi qu'une boîte de dialogue de plantage :"

#: ../../tutorial/tutorial-7.rst:216 778e3a366fa641df81fd69c54afe1038
#, fuzzy
msgid "Hello World Tutorial 7 app crash, on macOS"
msgstr "Plantage de l'application Hello World Tutorial 7, sur macOS"

#: ../../tutorial/tutorial-7.rst:256 ../../tutorial/tutorial-7.rst:343
#: 670da6f45ee14d4ab099eab4ef9d22fa 6fff23e2d8cc40e6a5c4f0c4e4020782
#, fuzzy
msgid "However, when the app runs, you'll see an error in the console:"
msgstr "Cependant, lorsque l'application s'exécute, une erreur apparaît dans la console :"

#: ../../tutorial/tutorial-7.rst:307 8d46265283d543c4af1979f8bd1d6a43
#, fuzzy
msgid "Hello World Tutorial 7 app crash, on Windows"
msgstr "Plantage de l'application Hello World Tutorial 7, sous Windows"

#: ../../tutorial/tutorial-7.rst:334 ../../tutorial/tutorial-7.rst:407
#: d9f2add6a28048a1b742d3419e471f4a ec0ab879017b49fd835ba3c58e1525bd
msgid "And finally, run the app (selecting a simulator when prompted):"
msgstr ""

#: ../../tutorial/tutorial-7.rst:417 e37adecf12b147499b84d6d0a81dcc6e
#, fuzzy
msgid "However, when the app runs, you'll see an error in the console"
msgstr "Cependant, lorsque l'application s'exécute, une erreur apparaît dans la console :"

#: ../../tutorial/tutorial-7.rst:430 2f324c4a01894ed0b721c0c412a9cb4a
#, fuzzy
msgid "Once again, the app has failed to start because ``faker`` has not been installed - but why? Haven't we already installed ``faker``?"
msgstr "Une fois de plus, l'application n'a pas pu démarrer parce que ``httpx`` a été installé - mais pourquoi ? N'avons-nous pas déjà installé `httpx` ?"

#: ../../tutorial/tutorial-7.rst:433 fb87efada5cd49ef845fd4a5ab1e8db7
#, fuzzy
msgid "We have - but only in the development environment. Your development environment is entirely local to your machine - and is only enabled when you explicitly activate it. Although Briefcase has a development mode, the main reason you'd use Briefcase is to package up your code so you can give it to someone else."
msgstr "Nous l'avons fait, mais uniquement dans l'environnement de développement. Votre environnement de développement est entièrement local à votre machine - et n'est activé que lorsque vous l'activez explicitement. Bien que Briefcase dispose d'un mode de développement, la principale raison pour laquelle vous utilisez Briefcase est d'empaqueter votre code afin de le donner à quelqu'un d'autre."

#: ../../tutorial/tutorial-7.rst:438 5172e39e75df4448a4e86bc10c850ae4
#, fuzzy
msgid "The only way to guarantee that someone else will have a Python environment that contains everything it needs is to build a completely isolated Python environment. This means there's a completely isolated Python install, and a completely isolated set of dependencies. This is what Briefcase is building when you run ``briefcase build`` - an isolated Python environment. This also explains why ``faker`` isn't installed - it has been installed in your *development* environment, but not in the packaged app."
msgstr "La seule façon de garantir que quelqu'un d'autre disposera d'un environnement Python contenant tout ce dont il a besoin est de construire un environnement Python complètement isolé. Cela signifie qu'il y a une installation Python complètement isolée, et un ensemble de dépendances complètement isolé. C'est ce que Briefcase construit quand vous lancez ``briefcase build`` - un environnement Python isolé. Cela explique aussi pourquoi ``httpx`` n'est pas installé - il a été installé dans votre environnement de *développement*, mais pas dans l'application packagée."

#: ../../tutorial/tutorial-7.rst:446 4b700f94f1714359932076ce06ba3687
#, fuzzy
msgid "So - we need to tell Briefcase that our app has an external dependency."
msgstr "Nous devons donc indiquer à Briefcase que notre application a une dépendance externe."

#: ../../tutorial/tutorial-7.rst:449 276e4e62ced044f6b62db178aebcd90f
#, fuzzy
msgid "Updating dependencies"
msgstr "Mise à jour des dépendances"

#: ../../tutorial/tutorial-7.rst:451 6239de13291746109c96df501f58da60
#, fuzzy
msgid "In the root directory of your app, there is a file named ``pyproject.toml``. This file contains all the app configuration details that you provided when you originally ran ``briefcase new``."
msgstr "Dans le répertoire racine de votre application, il y a un fichier nommé ``pyproject.toml``. Ce fichier contient tous les détails de configuration de l'application que vous avez fournis lorsque vous avez lancé ``briefcase new``."

#: ../../tutorial/tutorial-7.rst:455 47d6b648eb164a31b547218623300f6d
#, fuzzy
msgid "``pyproject.toml`` is broken up into sections; one of the sections describes the settings for your app::"
msgstr "``pyproject.toml`` est divisé en sections ; l'une d'entre elles décrit les paramètres de votre application: :"

#: ../../tutorial/tutorial-7.rst:466 a252902c2f9a4d9fb8f3f3374c0170d4
#, fuzzy
msgid "The ``requires`` option describes the dependencies of our application. It is a list of strings, specifying libraries (and, optionally, versions) of libraries that you want to be included with your app."
msgstr "L'option ``requires`` décrit les dépendances de notre application. C'est une liste de chaînes de caractères, spécifiant les bibliothèques (et, optionnellement, les versions) des bibliothèques que vous voulez inclure dans votre application."

#: ../../tutorial/tutorial-7.rst:470 5e27f6177930468a8446e66b7f1b929f
#, fuzzy
msgid "Modify the ``requires`` setting so that it reads::"
msgstr "Modifiez le paramètre ``requires`` de façon à ce qu'il se lise: :"

#: ../../tutorial/tutorial-7.rst:476 df60ab672c2945b68fb40a3a348e1fdb
#, fuzzy
msgid "By adding this setting, we're telling Briefcase \"when you build my app, run ``pip install faker`` into the application bundle\". Anything that would be legal input to ``pip install`` can be used here - so, you could specify:"
msgstr "En ajoutant ce paramètre, nous disons à Briefcase \"lorsque vous compilez mon application, lancez ``pip install httpx`` dans le bundle de l'application\". Tout ce qui serait une entrée légale pour `pip install`` peut être utilisé ici - ainsi, vous pourriez spécifier :"

#: ../../tutorial/tutorial-7.rst:480 d905b501f787437eacde6644361c0728
#, fuzzy
msgid "A specific library version (e.g., ``\"faker==37.3.0\"``);"
msgstr "Une version spécifique de la bibliothèque (par exemple, ``\"httpx==0.19.0\"``) ;"

#: ../../tutorial/tutorial-7.rst:481 22ce0f530606436f9f42e7f9b09380ba
#, fuzzy
msgid "A range of library versions (e.g., ``\"faker>=37\"``);"
msgstr "Une gamme de versions de la bibliothèque (par exemple, ``\"httpx>=0.19\"``) ;"

#: ../../tutorial/tutorial-7.rst:482 d6a1f10d8d634ece9f6ea69e91bdc335
#, fuzzy
msgid "A path to a git repository (e.g., ``\"git+https://github.com/joke2k/faker/\"``); or"
msgstr "Un chemin vers un dépôt git (par exemple, ``\"git+https://github.com/encode/httpx\"``) ; ou"

#: ../../tutorial/tutorial-7.rst:484 6cecaaecf99e42308c77b334abca2429
#, fuzzy
msgid "A local file path (However - be warned: if you give your code to someone else, this path probably won't exist on their machine!)"
msgstr "Un chemin d'accès à un fichier local (Cependant, attention : si vous donnez votre code à quelqu'un d'autre, ce chemin d'accès n'existera probablement pas sur sa machine !)"

#: ../../tutorial/tutorial-7.rst:487 16fa028aec224fdeae417206060732c3
#, fuzzy
msgid "Further down in ``pyproject.toml``, you'll notice other sections that are operating system dependent, like ``[tool.briefcase.app.helloworld.macOS]`` and ``[tool.briefcase.app.helloworld.windows]``. These sections *also* have a ``requires`` setting. These settings allow you to define additional platform-specific dependencies - so, for example, if you need a platform-specific library to handle some aspect of your app, you can specify that library in the platform-specific ``requires`` section, and that setting will only be used for that platform. You will notice that the ``toga`` libraries are all specified in the platform-specific ``requires`` section - this is because the libraries needed to display a user interface are platform specific."
msgstr "Plus loin dans ``pyproject.toml``, vous remarquerez d'autres sections qui dépendent du système d'exploitation, comme ``[tool.briefcase.app.helloworld.macOS]`` et ``[tool.briefcase.app.helloworld.windows]``. Ces sections ont *également* un paramètre ``requires``. Ces paramètres vous permettent de définir des dépendances supplémentaires spécifiques à une plate-forme - ainsi, par exemple, si vous avez besoin d'une bibliothèque spécifique à une plate-forme pour gérer un aspect de votre application, vous pouvez spécifier cette bibliothèque dans la section ``requires'' spécifique à la plate-forme, et ce paramètre ne sera utilisé que pour cette plate-forme. Vous remarquerez que les bibliothèques ``toga`` sont toutes spécifiées dans la section ``requires`` spécifique à la plate-forme - c'est parce que les bibliothèques nécessaires pour afficher une interface utilisateur sont spécifiques à la plate-forme."

#: ../../tutorial/tutorial-7.rst:498 72c98c1bd8c94d9282fff5c2f44dc0a8
#, fuzzy
msgid "In our case, we want ``faker`` to be installed on all platforms, so we use the app-level ``requires`` setting. The app-level dependencies will always be installed; the platform-specific dependencies are installed *in addition* to the app-level ones."
msgstr "Dans notre cas, nous voulons que ``httpx`` soit installé sur toutes les plateformes, donc nous utilisons le paramètre ``requires`` au niveau de l'application. Les dépendances au niveau de l'application seront toujours installées ; les dépendances spécifiques à la plate-forme sont installées *en plus* de celles au niveau de l'application."

#: ../../tutorial/tutorial-7.rst:503 a8e67eb88ee04c0aaf84bb4211b60001
#, fuzzy
msgid "Now that we've told Briefcase about our additional requirements, we can try packaging our app again. Ensure that you've saved your changes to ``pyproject.toml``, and then update your app again - this time, passing in the ``-r`` flag. This tells Briefcase to update requirements in the packaged app:"
msgstr "Maintenant que nous avons informé Briefcase de nos exigences supplémentaires, nous pouvons essayer d'empaqueter à nouveau notre application. Assurez-vous que vous avez sauvegardé vos changements dans ``pyproject.toml``, puis mettez à jour votre application à nouveau - cette fois-ci, en passant le drapeau ``-r``. Cela indique à Briefcase de mettre à jour les exigences dans l'application packagée :"

#: ../../tutorial/tutorial-7.rst:618 53dd1d14388a4b14aabb32571881b24e
#, fuzzy
msgid "Once you've updated, you can run ``briefcase build`` and ``briefcase run`` - and you should see your packaged app, with the new dialog behavior."
msgstr "Une fois la mise à jour effectuée, vous pouvez lancer ``briefcase build`` et ``briefcase run`` - et vous devriez voir votre application packagée, avec le nouveau comportement du dialogue."

#: ../../tutorial/tutorial-7.rst:623 212ecdb25e7f44bfafcccfad3278b595
#, fuzzy
msgid "The ``-r`` option for updating requirements is also honored by the ``build`` and ``run`` command, so if you want to update, build, and run in one step, you could use ``briefcase run -u -r``."
msgstr "L'option ``-r`` pour la mise à jour des exigences est également honorée par les commandes ``build`` et ``run``, donc si vous voulez mettre à jour, compiler et exécuter en une seule étape, vous pouvez utiliser ``briefcase run -u -r``."

#: ../../tutorial/tutorial-7.rst:628 82cc25257ce64cdca51f7004bca9ad26
msgid "Third-Party Python Packages for Mobile and Web"
msgstr ""

#: ../../tutorial/tutorial-7.rst:630 d5316114365040f186e92d31241ce51d
msgid "Faker is just one example of a third-party Python package - a collection of code that isn't part what Python provides out of the box. These third-party packages are most commonly distributed using the `Python Package Index (PyPI) <https://pypi.org>`__, and installed into your local virtual environment. We've been using ``pip`` in this tutorial, but there are other options."
msgstr ""

#: ../../tutorial/tutorial-7.rst:636 c7390312cc7e4283b3c4fdd7c0fd2b1e
#, fuzzy
msgid "On desktop platforms (macOS, Windows, Linux), essentially any package on PyPI package can be installed into your virtual environment, or added to your app's requirements. However, when building an app for mobile or web platforms, `your options are slightly limited <https://briefcase.beeware.org/en/latest/about/faq.html#can-i-use-third-party-python-packages-in-my-app>`__."
msgstr "Sur les plateformes de bureau (macOS, Windows, Linux), tout ``pip``-installable peut être ajouté à vos exigences. Sur les plateformes mobiles et web, `vos options sont légèrement limitées <https://briefcase.readthedocs.io/en/latest/background/faq.html#can-i-use-third-party-python-packages-in-my-app>`__."

#: ../../tutorial/tutorial-7.rst:642 664dfce986f0485ca7eca4f9faf582a6
msgid "In short; any *pure Python* package (i.e. any package created from a project written *only* in Python) can be used without difficulty. Some packages, though, are created from projects that contain both Python and other languages (e.g. C, C++, Rust, etc). Code written in those languages needs to be compiled to platform-specific binary modules before it can be used, and those pre-compiled binary modules are only available on specific platforms. Mobile and web platforms have very different requirements than \"standard\" desktop platforms. At this time, most Python packages don't provide pre-compiled binaries for mobile and web platforms."
msgstr ""

#: ../../tutorial/tutorial-7.rst:652 354416bc40b2413db2c9a8eaf1631a1a
msgid "On PyPI, packages are often provided in a pre-built distribution format called *wheels*. To check whether a package is pure Python, look at the PyPI downloads page for the project. If the wheels provided have a ``-py3-none-any.whl`` suffix (e.g., `Faker <https://pypi.org/project/Faker/37.3.0/#files>`__), then they are pure Python wheels. However, if the wheels have version and platform-specific extensions (e.g., `Pillow <https://pypi.org/project/pillow/11.2.1/#files>`__, which has wheels with suffixes like ``-cp313-cp313-macosx_11_0_arm64.whl`` and ``-cp39-cp39-win_amd64.whl``), then the wheel *contains a binary component*. That package cannot be installed on mobile or web platforms unless a wheel compatible with those platforms has been provided."
msgstr ""

#: ../../tutorial/tutorial-7.rst:663 c5f2d43782ff42209897812761170c9d
msgid "At this time, *most* binary packages on PyPI don't provide mobile- or web-compatible wheels. To fill this gap, BeeWare provides binaries for some popular binary modules (including ``numpy``, ``pandas``, and ``cryptography``). These wheels are *not* distributed on PyPI, but Briefcase will install those wheels if they're available."
msgstr ""

#: ../../tutorial/tutorial-7.rst:669 e7bb35e7d20f4070b8ab1240b0eb5bb7
#, fuzzy
msgid "It's *usually* possible to compile binary packages for mobile platforms, but it's not easy to set up -- well outside the scope of an introductory tutorial like this one."
msgstr "BeeWare peut fournir des binaires pour certains modules binaires populaires (y compris ``numpy``, ``pandas``, et ``cryptographie``). Il est *habituellement* possible de compiler des paquets pour les plateformes mobiles, mais ce n'est pas facile à mettre en place -- ce qui sort du cadre d'un tutoriel d'introduction comme celui-ci."

#: ../../tutorial/tutorial-7.rst:674 8a7f7a9286f24bd885b5bd817922e866
msgid "Next steps"
msgstr "Étapes suivantes"

#: ../../tutorial/tutorial-7.rst:676 86a6c33a637747cba0140da79aa603cf
msgid "We've now got an app that uses a third-party library! In :doc:`Tutorial 8 <tutorial-8>` we'll learn how to ensure our app remains responsive as we add more complex application logic."
msgstr ""

#~ msgid "Accessing an API"
#~ msgstr "Accéder à une API"

#~ msgid "A common task an app will need to perform is to make a request on a web API to retrieve data, and display that data to the user. This is a toy app, so we don't have a *real* API to work with, so we'll use the `{JSON} Placeholder API <https://jsonplaceholder.typicode.com>`__ as a source of data."
#~ msgstr "Une tâche courante qu'une application doit effectuer est de faire une requête sur une API web pour récupérer des données, et afficher ces données à l'utilisateur. Comme il s'agit d'une application jouet, nous n'avons pas de *vraie* API à utiliser. Nous utiliserons donc la `{JSON} Placeholder API <https://jsonplaceholder.typicode.com>`__ comme source de données."

#~ msgid "The {JSON} Placeholder API has a number of \"fake\" API endpoints you can use as test data. One of those APIs is the ``/posts/`` endpoint, which returns fake blog posts. If you open ``https://jsonplaceholder.typicode.com/posts/42`` in your browser, you'll get a JSON payload describing a single post - some `Lorum ipsum <https://en.wikipedia.org/wiki/Lorem_ipsum>`__ content for a blog post with ID 42."
#~ msgstr "L'API {JSON} Placeholder possède un certain nombre de \"faux\" points de terminaison d'API que vous pouvez utiliser comme données de test. L'une de ces API est le point de terminaison ``/posts/``, qui renvoie de faux billets de blog. Si vous ouvrez ``https://jsonplaceholder.typicode.com/posts/42`` dans votre navigateur, vous obtiendrez un fichier JSON décrivant un seul article - un contenu `Lorum ipsum <https://en.wikipedia.org/wiki/Lorem_ipsum>`__ pour un article de blog avec l'ID 42."

#~ msgid "The Python standard library contains all the tools you'd need to access an API. However, the built-in APIs are very low level. They are good implementations of the HTTP protocol - but they require the user to manage lots of low-level details, like URL redirection, sessions, authentication, and payload encoding. As a \"normal browser user\" you're probably used to taking these details for granted, as a browser manages these details for you."
#~ msgstr "La bibliothèque standard de Python contient tous les outils dont vous avez besoin pour accéder à une API. Cependant, les API intégrées sont de très bas niveau. Ce sont de bonnes implémentations du protocole HTTP, mais elles exigent de l'utilisateur qu'il gère de nombreux détails de bas niveau, comme la redirection d'URL, les sessions, l'authentification et l'encodage des données utiles. En tant qu'\"utilisateur normal de navigateur\", vous avez probablement l'habitude de considérer ces détails comme allant de soi, car le navigateur les gère pour vous."

#~ msgid "As a result, people have developed third-party libraries that wrap the built-in APIs and provide a simpler API that is a closer match for the everyday browser experience. We're going to use one of those libraries to access the {JSON} Placeholder API - a library called `httpx <https://www.python-httpx.org>`__."
#~ msgstr "En conséquence, des bibliothèques tierces ont été développées pour envelopper les API intégrées et fournir une API plus simple qui correspond mieux à l'expérience quotidienne du navigateur. Nous allons utiliser l'une de ces bibliothèques pour accéder à l'API {JSON} Placeholder - une bibliothèque appelée `httpx <https://www.python-httpx.org>`__."

#~ msgid "This will change the ``say_hello()`` callback so that when it is invoked, it will:"
#~ msgstr "Cela modifiera le callback ``say_hello()`` de telle sorte que lorsqu'il est invoqué, il le fera :"

#~ msgid "make a GET request on the JSON placeholder API to obtain post 42;"
#~ msgstr "effectuer une requête GET sur l'API JSON pour obtenir le poste 42 ;"

#~ msgid "decode the response as JSON;"
#~ msgstr "décoder la réponse en JSON ;"

#~ msgid "extract the body of the post; and"
#~ msgstr "extraire le corps du message ; et"

#~ msgid "include the body of that post as the text of the dialog."
#~ msgstr "inclure le corps de ce message dans le texte du dialogue."

#~ msgid "Some binary packages may not be available"
#~ msgstr "Certains paquets binaires peuvent ne pas être disponibles"

#~ msgid "In short; any *pure Python* package (i.e., packages that do *not* contain a binary module) can be used without difficulty. However, if your dependency contains a binary component, it must be compiled; at this time, most Python packages don't provide compilation support for non-desktop platforms."
#~ msgstr "En bref, tout paquetage *pure Python* (c'est-à-dire les paquetages qui ne contiennent pas de module binaire) peut être utilisé sans difficulté. Cependant, si votre dépendance contient un composant binaire, il doit être compilé ; à l'heure actuelle, la plupart des paquets Python ne fournissent pas de support de compilation pour les plates-formes autres que les ordinateurs de bureau."

#~ msgid "We've now got an app that uses a third-party library! However, you may have noticed that when you press the button, the app becomes a little unresponsive. Can we do anything to fix this? Turn to :doc:`Tutorial 8 <tutorial-8>` to find out..."
#~ msgstr "Nous avons maintenant une application qui utilise une bibliothèque tierce ! Cependant, vous avez peut-être remarqué que lorsque vous appuyez sur le bouton, l'application ne répond plus vraiment. Pouvons-nous faire quelque chose pour résoudre ce problème ? Consultez :doc:`Tutoriel 8 <tutorial-8>` pour le savoir..."
