msgid ""
msgstr ""
"Project-Id-Version: BeeWare 0.3\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-01-06 18:04+0800\n"
"PO-Revision-Date: 2025-07-05 15:27+0000\n"
"Last-Translator: John <johnzhou721@gmail.com>\n"
"Language-Team: Chinese (Simplified Han script) <https://hosted.weblate.org/"
"projects/beeware/tutorial/tutorial-6/zh_Hans/>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"X-Generator: Weblate 5.13-dev\n"
"Generated-By: Babel 2.14.0\n"

#: ../../tutorial/tutorial-6.rst:3 2a532cc3806d417fa3be690ab757a4b2
msgid "Tutorial 6 - Put it on the web!"
msgstr "教程 6 - 把它放上网！"

#: ../../tutorial/tutorial-6.rst:5 63bdab949d54413bbda05a5c366ce19b
msgid "In addition to supporting mobile platforms, the Toga widget toolkit also supports the web! Using the same API that you used to deploy your desktop and mobile applications, you can deploy your application as a single-page web app."
msgstr "除了支持移动平台，Toga "
"控件工具包还支持网络！使用与部署桌面和移动应用程序相同的应用程序接口，您可以"
"将应用程序部署为单页网页应用程序。"

#: ../../tutorial/tutorial-6.rst:9 1af5ed570dab4ac9bd5e0f7c920e62a5
msgid "Proof of Concept"
msgstr "概念验证"

#: ../../tutorial/tutorial-6.rst:11 879b2c25a86349688aa458b19265fa96
msgid "The Toga Web backend is the least mature of all the Toga backends. It's mature enough to show off a few features, but it's likely to be buggy, and will be missing many of the widgets that are available on other platforms. At this point in time, Web deployment should be considered a \"Proof of Concept\" - enough to demonstrate what can be done, but not enough to be relied on for serious development."
msgstr ""
"Toga Web 后端是所有 Toga "
"后端中最不成熟的一个。它已经足够成熟，可以展示一些功能，但很可能会有问题，而"
"且会缺少许多其他平台上可用的控件。目前，Web "
"部署应被视为“概念验证”--足以展示可以做什么，但还不足以作为严肃开发的依据。"

#: ../../tutorial/tutorial-6.rst:18 865c937ff1a4479d96d1345c782d971e
msgid "If you have problems with this step of the tutorial, you can skip to the next page."
msgstr "如果您在教程的这一步遇到问题，可以跳到下一页。"

#: ../../tutorial/tutorial-6.rst:22 2ec049fc8b704716bc73962331d277be
msgid "Deploying as a web app"
msgstr "作为网页应用程序部署"

#: ../../tutorial/tutorial-6.rst:24 e8a7a354dedf42e5addb91efd4403f7d
msgid "The process of deploying as a single-page web app follows the same familiar pattern - you create the application, then build the application, then run it. However, Briefcase can be a little bit smart; if you attempt to run an application, and Briefcase determines that it hasn't been created or built for the platform being targeted, it will do the create and build steps for you. Since this is our first time running the app for the web, we can perform all three steps with one command:"
msgstr ""
"作为单页面 Web 应用程序部署的过程遵循相同的熟悉模式--"
"创建应用程序，然后构建应用程序，然后运行它。不过，Briefcase "
"也有一点小聪明；如果您尝试运行应用程序，而 Briefcase "
"确定该应用程序尚未针对目标平台创建或构建，那么它会为您执行创建和构建步骤。由"
"于这是我们第一次为网络运行应用程序，我们可以用一条命令执行所有三个步骤："

#: ../../tutorial/tutorial-6.rst:34 510f5b2ca0884038a8e30fb9a096af4d
msgid "macOS"
msgstr "macOS"

#: ../../tutorial/tutorial-6.rst:72 52e1585ec59c40f781a5ca2464633807
msgid "Linux"
msgstr "Linux"

#: ../../tutorial/tutorial-6.rst:110 fa0f7530ac0f457581d5b701b434bdae
msgid "Windows"
msgstr "Windows"

#: ../../tutorial/tutorial-6.rst:148 df579c00750d4c189854c8435ee2a6d9
msgid "This will open a web browser, pointing at `http://127.0.0.1:8080 <http://127.0.0.1:8080>`__:"
msgstr "这将打开一个网页浏览器，指向 `http://127.0.0.1:8080 "
"<http://127.0.0.1:8080>`__："

#: ../../tutorial/tutorial-6.rst:-1 44ec2c4a17eb4a0fb34dd63c7b25c7c9
msgid "Hello World Tutorial 6 dialog, in a browser"
msgstr "浏览器中的 Hello World 教程 6 对话框"

#: ../../tutorial/tutorial-6.rst:154 1c69ad598da146a8823c62636e319a11
msgid "If you enter your name and click the button, a dialog will appear."
msgstr "如果输入您的姓名并点击按钮，就会出现一个对话框。"

#: ../../tutorial/tutorial-6.rst:157 e2804ef8f97a474fad96f26cae388adf
msgid "How does this work?"
msgstr "这是怎么工作的？"

#: ../../tutorial/tutorial-6.rst:159 23efa1eac513406b9b5cce6dc5b18625
msgid "This web app is a static website - a single HTML source page, with some CSS and other resources. Briefcase has started a local web server to serve this page so your browser can view the page. If you wanted to put this web page into production, you could copy the contents of the ``www`` folder onto any web server that can serve static content."
msgstr ""
"此网络应用程序是一个静态网站 -- 一个 HTML 源页面，包含一些 CSS 和其他资源。"
"Briefcase "
"启动了一个本地网络服务器来提供该页面，以便您的浏览器可以查看该页面。如果您想"
"将此网页进入生产，可以将 ``www`` "
"文件夹中的内容复制到任何可以提供静态内容的网络服务器上。"

#: ../../tutorial/tutorial-6.rst:165 402bb2a720f24a18823421539fae8de7
msgid "But when you press the button, you're running Python code... how does that work? Toga uses `PyScript <https://pyscript.net>`__ to provide a Python interpreter in the browser. Briefcase packages your app's code as wheels that PyScript can load in the browser. When the page is loaded, the application code runs in the browser, building the UI using the browser DOM. When you click a button, that button runs the event handling code in the browser."
msgstr ""
"但当你按下按钮时，你运行的是 Python 代码......这是怎么做到的呢？Toga 使用 `"
"PyScript <https://pyscript.net>`__ 在浏览器中提供 Python 解释器。Briefcase "
"将应用程序的代码打包成 PyScript 可以在浏览器中加载的 "
"wheels。加载页面时，应用代码会在浏览器中运行，并使用浏览器 DOM "
"构建用户界面。当您点击按钮时，该按钮会在浏览器中运行事件处理代码。"

#: ../../tutorial/tutorial-6.rst:173 c0712cbbdbb5474fae8a3b7ea9e1f165
msgid "Next steps"
msgstr "下一步"

#: ../../tutorial/tutorial-6.rst:175 b6d10fd98437433fa32e02fb94803bde
msgid "Although we've now deployed this app on desktop, mobile and the web, the app is fairly simple, and doesn't involve any third-party libraries. Can we include libraries from the Python Package Index (PyPI) in our app? Turn to :doc:`Tutorial 7 <tutorial-7>` to find out..."
msgstr ""
"虽然我们现在已经在桌面、手机和网络上部署了这个应用程序，但该应用程序相当简单"
"，不涉及任何第三方库。我们可以在应用程序中包含 Python 包索引 (PyPI) "
"中的库吗？请访问 :doc:`教程7 <tutorial-7>` 了解详情..."
